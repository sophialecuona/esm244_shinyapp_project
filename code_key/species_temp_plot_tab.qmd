---
title: "Plot Species/Temperature Tab"
format: html
editor: visual
---

## Libraries

```{r}
library(tidyverse)
library(here)
library(broom)
library(janitor)
library(cowplot)
library(dplyr)
```

## Input Data

Take from Data Wrangling Tab

```{r}
eis <- all %>%
  select(year, comm_name, value_usd, landings_mt, landings_kg, landings_lb, price_usd_lb) %>%
  filter(comm_name %in% c("Chinook salmon", "Dungeness crab", "Market squid"))


dismap_all_df <- read_csv(here("data", "full_dung_squid_chin.csv"))
  
  
oilspill_raw_df <- read_csv(here("data", "oill_spill_incident_tracking.csv")) |>
  clean_names()
```

## Depth Related Plots

```{r}

#Depth vs Year - all species
ggplot(full_dung_squid_chin, aes(x = year, y = depth, color = species)) +
   geom_point() +
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "Depth vs. Year",
       x = "Year",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

#Depth vs Year - crab and squid

ggplot(full_dung_squid, aes(x = year, y = depth, color = species)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.5, size = 1) +  # Add jitter for better visibility
  geom_smooth(method = "loess", se = FALSE, color = "black") +  # Add non-linear smoother
  labs(title = "Depth vs. Year",
       x = "Year",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#59B4C3", "#E193BC")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

#CRAB ONLY
crab_dismap <- full_dung_squid %>%
  filter(species == "dungeness")

ggplot(crab_dismap, aes(x = year, y = depth, color = species)) +
  geom_point()+
  geom_jitter(width = 0.2, height = 0, alpha = 0.5, size = 1) +
  labs(title = "Depth vs. Year",
       x = "Year",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#59B4C3")) +
  theme_minimal() 

#SQUID ONLY
squid_dismap <- full_dung_squid %>%
  filter(species == "squid")

ggplot(squid_dismap, aes(x = year, y = depth, color = species)) +
  geom_point()+
  geom_jitter(width = 0.2, height = 0, alpha = 0.5, size = 1) +
  labs(title = "Depth vs. Year",
       x = "Year",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#211C6A")) +
  theme_minimal() 

#CHINOOK
chinook_dismap <- full_dung_squid_chin %>%
  filter(species == "chinook")

ggplot(squid_dismap, aes(x = year, y = depth, color = species)) +
  geom_point()+
  geom_jitter(width = 0.2, height = 0, alpha = 0.5, size = 1) +
  labs(title = "Depth vs. Year",
       x = "Year",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291")) +
  theme_minimal() 



############### DEPTH VS CPUE

#Depth vs CPUE
ggplot(full_dung_squid_chin, aes(x = wtcpue, y = depth, color = species)) +
   geom_violin() +
  labs(title = "CPUE vs. Year",
       x = "CPUE",
       y = "Depth (m)",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

#Depth vs CPUE - just crab and squid
ggplot(full_dung_squid, aes(x = wtcpue, y = depth, fill = species)) +
   geom_violin() +
  labs(title = "CPUE vs. Year",
       x = "CPUE",
       y = "Depth (m)",
       fill = "Species Type") +
  scale_fill_manual(values = c("#59B4C3", "#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

```

## CPUE Related Plots

```{r}
#full_dung_dquid_chin dataset

ggplot(full_dung_squid_chin, aes(x = year, y = wtcpue, color = species)) +
  geom_point() +
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "CPUE vs. Species",
       x = "Year",
       y = "Weighted Catch Per Unit Effort (CPUE)",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

#Count chart
ggplot(full_dung_squid_chin, aes(x = year, y = wtcpue, color = species)) +
  geom_count(show.legend = FALSE) +
  labs(title = "CPUE vs. Species",
       x = "Year",
       y = "Weighted Catch Per Unit Effort (CPUE)",
       color = "Species Type")+
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A"))+
   theme_minimal()


#Has a lot of outliers for Dunges may need to remove - no model of best fit is working

```

## Bubble Chart Experimentation

```{r}
#Bubble chart   ###### could add with other dataset to look at landings
ggplot(full_dung_squid_chin, aes(x = year, y = wtcpue, color = species, size = depth)) +
  geom_point(alpha = 0.6)+
  scale_size(range = c(.1, 10), name="Depth (m)")+
  labs(title = "CPUE vs. Species vs. Depth",
       x = "Year",
       y = "Weighted Catch Per Unit Effort (CPUE)",
       color = "Species Type")+
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A"))+
   theme_minimal()

write_csv(full_dung_squid_chin,here("data","full_dung_squid_chin.csv"))
```

## Landings vs Species

```{r}
ggplot(eis, aes(x = year, y = landings_lb, color = comm_name)+
  geom_point()#size = price_usd_lb
#squid all alone and doing weird things

ggplot(eis, aes(x = year, y = landings_kg, color = comm_name)) +
  geom_point(alpha = 0.6)
#tried all different landings options and scatter plot still looks the same
#seperate crab and chinook from squid

#### Squid Only
squid_eis <- eis %>%
  filter(comm_name == "Market squid")

ggplot(squid_eis, aes(x = year, y = landings_lb, color = comm_name)) +
  geom_point(alpha = 0.75)+
  geom_smooth(method = "glm") + 
  labs(title = "Year vs. Landings of Market Squid",
       x = "Year",
       y = "Landings (lbs)",
       color = "Species Type") +
  scale_color_manual(values = c("#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))


#### Chinook and Crab
crab_chin_eis <- eis |>
  filter(comm_name == c("Chinook salmon", "Dungeness crab")

ggplot(crab_chin_eis, aes(x = year, y = landings_lb, color = comm_name)) +
  geom_point(alpha = 0.75)+
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "Year vs. Landings of Chinook salmon and Dungeness crab",
       x = "Year",
       y = "Landings (lbs)",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291", "#59B4C3")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))
```

## Value vs Species

```{r}
ggplot(eis, aes(x = year, y = value_usd, color = comm_name)) +
  geom_point(alpha = 0.75)+
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "Year vs. Value of all fisheries",
       x = "Year",
       y = "Value USD",
       color = "Species Type") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme_minimal() +
  theme(legend.title = element_text(face = "bold", size = 12))

#Experiment with size aS landings
ggplot(eis, aes(x = year, y = value_usd, color = comm_name, size = landings_lb)) +
  geom_point(alpha = 0.75)+
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "Year vs. Value of all fisheries",
       x = "Year",
       y = "Value USD",
       color = "Species Type",
       size = "Landings (lbs)") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme(legend.title = element_text(face = "bold", size = 12),
        legend.background = element_rect(fill = "transparent"))


#Experiment with size aS price_usd_lb
ggplot(eis, aes(x = year, y = value_usd, color = comm_name, size = price_usd_lb)) +
  geom_point(alpha = 0.75)+
  geom_smooth(method = "glm", se = FALSE) + 
  labs(title = "Year vs. Value of all fisheries",
       x = "Year",
       y = "Value USD",
       color = "Species Type",
       size = "Price (USD)") +
  scale_color_manual(values = c("#74E291", "#59B4C3", "#211C6A")) +
  theme(legend.title = element_text(face = "bold", size = 12))
```

## Joining EIS and DisMap Data

```{r}
eis_dismap <- full_join(
  eis,
  full_dung_squid_chin, 
  by = NULL,
  suffix = c(".x", ".y"),
  keep = FALSE
)

#might need to account for comm_name and species calling the species names slightly different things 

#### GOAL IS TO GET WTCPUE VS LANDINGS CAPTURED
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2003-01-01"

end = "2003-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2003 <- grid %>%
  mutate(year = '2003') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp)

temp_2003 <- temp_2003[1, ]
  
#temp_val2003<-grid %>% 
# mean of grid temp_val
#repeat for 20 years
#put all the repeated things in one dataframe
  
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2004-01-01"

end = "2004-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2004 <- grid %>%
  mutate(year = '2004') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2004 <- temp_2004[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2005-01-01"

end = "2005-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2005 <- grid %>%
  mutate(year = '2005') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2005 <- temp_2005[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2006-01-01"

end = "2006-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2006 <- grid %>%
  mutate(year = '2006') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2006 <- temp_2006[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2007-01-01"

end = "2007-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2007 <- grid %>%
  mutate(year = '2007') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2007 <- temp_2007[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2008-01-01"

end = "2008-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2008 <- grid %>%
  mutate(year = '2008') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2008 <- temp_2008[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2009-01-01"

end = "2009-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2009 <- grid %>%
  mutate(year = '2009') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2009 <- temp_2009[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2010-01-01"

end = "2010-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2010 <- grid %>%
  mutate(year = '2010') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2010 <- temp_2010[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2011-01-01"

end = "2011-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2011 <- grid %>%
  mutate(year = '2011') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2011 <- temp_2011[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2012-01-01"

end = "2012-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2012 <- grid %>%
  mutate(year = '2012') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2012 <- temp_2012[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2013-01-01"

end = "2013-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2013 <- grid %>%
  mutate(year = '2013') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2013 <- temp_2013[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2014-01-01"

end = "2014-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2014 <- grid %>%
  mutate(year = '2014') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2014 <- temp_2014[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2015-01-01"

end = "2015-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2015 <- grid %>%
  mutate(year = '2015') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2015 <- temp_2015[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2016-01-01"

end = "2016-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2016 <- grid %>%
  mutate(year = '2016') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2016 <- temp_2016[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2017-01-01"

end = "2017-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2017 <- grid %>%
  mutate(year = '2017') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2017 <- temp_2017[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2018-01-01"

end = "2018-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2018 <- grid %>%
  mutate(year = '2018') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2018 <- temp_2018[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2019-01-01"

end = "2019-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2019 <- grid %>%
  mutate(year = '2019') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2019 <- temp_2019[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2020-01-01"

end = "2020-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2020 <- grid %>%
  mutate(year = '2020') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2020 <- temp_2020[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2021-01-01"

end = "2021-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2021 <- grid %>%
  mutate(year = '2021') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2021 <- temp_2021[1, ]
```

```{r}
library(rerddap)
file_id <- rerddap::info(datasetid = "NOAA_DHW_monthly")

start = "2022-01-01"

end = "2022-12-31"

grid <- griddap(file_id,
                time = c(start, end),
                latitude = c(30, 42),
                longitude = c(-115, 130))$data


library(dplyr)
library(lubridate)
library(tidyr)

temp_2022 <- grid %>%
  mutate(year = '2022') %>% 
  select(sea_surface_temperature, year) %>%
  drop_na() %>% 
  mutate(average_temp = mean(sea_surface_temperature)) %>% 
  select(year, average_temp) 

temp_2022 <- temp_2022[1, ]
```

```{r}
dfs <- list(temp_2003, temp_2004, temp_2006, temp_2007, temp_2008, temp_2009, temp_2010, temp_2011, temp_2012, temp_2013, temp_2014, temp_2015, temp_2016, temp_2017, temp_2018, temp_2019, temp_2020, temp_2021, temp_2022)

temp_df <-Reduce(full_join, dfs)
temp_df$year <- as.integer(temp_df$year)
```


## LONG TERM GOAL: Temp vs Time with catch mapped overtop

```{r}
library(ggplot2)

#just new temp data
ggplot(temp_df, aes(x = year, y = average_temp)) +
  geom_line() +
  labs(title = "Average Temp vs Year",
       x = "",
       y = "Average Temperature (C)")+
  theme_minimal()

#CPUE on top

#merged by year to combine dismap and avg temp data  
merged_dis_temp <- merge(temp_df, dismap_all_df, by = "year")

ggplot() +
  geom_line(data = merged_dis_temp, aes(x = year, y = average_temp), color = "blue", linetype = "solid") +
  geom_line(data = merged_dis_temp, aes(x = year, y = wtcpue), color = "red", linetype = "dashed") +
  labs(title = "Two Lines on the Graph",
       x = "X Axis Label",
       y = "Y Axis Label")

ggplot(merged_dis_temp, aes(x = year, y = average_temp, color = species)) +
  geom_line() +
  labs(title = "Line Plot with Multiple Lines",
       x = "Year",
       y = "Value")
```
